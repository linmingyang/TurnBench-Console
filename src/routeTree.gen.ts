/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthenticatedStartGameIndexRouteImport } from './routes/_authenticated/start-game/index'
import { Route as AuthenticatedProvidersIndexRouteImport } from './routes/_authenticated/providers/index'
import { Route as AuthenticatedModelsIndexRouteImport } from './routes/_authenticated/models/index'
import { Route as AuthenticatedHistoryIndexRouteImport } from './routes/_authenticated/history/index'
import { Route as AuthenticatedDatasetIndexRouteImport } from './routes/_authenticated/dataset/index'
import { Route as AuthenticatedBenchmarksIndexRouteImport } from './routes/_authenticated/benchmarks/index'
import { Route as AuthenticatedSessionDetailSession_idIndexRouteImport } from './routes/_authenticated/session-detail/$session_id/index'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedStartGameIndexRoute =
  AuthenticatedStartGameIndexRouteImport.update({
    id: '/start-game/',
    path: '/start-game/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProvidersIndexRoute =
  AuthenticatedProvidersIndexRouteImport.update({
    id: '/providers/',
    path: '/providers/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedModelsIndexRoute =
  AuthenticatedModelsIndexRouteImport.update({
    id: '/models/',
    path: '/models/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedHistoryIndexRoute =
  AuthenticatedHistoryIndexRouteImport.update({
    id: '/history/',
    path: '/history/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDatasetIndexRoute =
  AuthenticatedDatasetIndexRouteImport.update({
    id: '/dataset/',
    path: '/dataset/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedBenchmarksIndexRoute =
  AuthenticatedBenchmarksIndexRouteImport.update({
    id: '/benchmarks/',
    path: '/benchmarks/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSessionDetailSession_idIndexRoute =
  AuthenticatedSessionDetailSession_idIndexRouteImport.update({
    id: '/session-detail/$session_id/',
    path: '/session-detail/$session_id/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof AuthenticatedIndexRoute
  '/benchmarks': typeof AuthenticatedBenchmarksIndexRoute
  '/dataset': typeof AuthenticatedDatasetIndexRoute
  '/history': typeof AuthenticatedHistoryIndexRoute
  '/models': typeof AuthenticatedModelsIndexRoute
  '/providers': typeof AuthenticatedProvidersIndexRoute
  '/start-game': typeof AuthenticatedStartGameIndexRoute
  '/session-detail/$session_id': typeof AuthenticatedSessionDetailSession_idIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AuthenticatedIndexRoute
  '/benchmarks': typeof AuthenticatedBenchmarksIndexRoute
  '/dataset': typeof AuthenticatedDatasetIndexRoute
  '/history': typeof AuthenticatedHistoryIndexRoute
  '/models': typeof AuthenticatedModelsIndexRoute
  '/providers': typeof AuthenticatedProvidersIndexRoute
  '/start-game': typeof AuthenticatedStartGameIndexRoute
  '/session-detail/$session_id': typeof AuthenticatedSessionDetailSession_idIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/benchmarks/': typeof AuthenticatedBenchmarksIndexRoute
  '/_authenticated/dataset/': typeof AuthenticatedDatasetIndexRoute
  '/_authenticated/history/': typeof AuthenticatedHistoryIndexRoute
  '/_authenticated/models/': typeof AuthenticatedModelsIndexRoute
  '/_authenticated/providers/': typeof AuthenticatedProvidersIndexRoute
  '/_authenticated/start-game/': typeof AuthenticatedStartGameIndexRoute
  '/_authenticated/session-detail/$session_id/': typeof AuthenticatedSessionDetailSession_idIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/benchmarks'
    | '/dataset'
    | '/history'
    | '/models'
    | '/providers'
    | '/start-game'
    | '/session-detail/$session_id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/benchmarks'
    | '/dataset'
    | '/history'
    | '/models'
    | '/providers'
    | '/start-game'
    | '/session-detail/$session_id'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/'
    | '/_authenticated/benchmarks/'
    | '/_authenticated/dataset/'
    | '/_authenticated/history/'
    | '/_authenticated/models/'
    | '/_authenticated/providers/'
    | '/_authenticated/start-game/'
    | '/_authenticated/session-detail/$session_id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/start-game/': {
      id: '/_authenticated/start-game/'
      path: '/start-game'
      fullPath: '/start-game'
      preLoaderRoute: typeof AuthenticatedStartGameIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/providers/': {
      id: '/_authenticated/providers/'
      path: '/providers'
      fullPath: '/providers'
      preLoaderRoute: typeof AuthenticatedProvidersIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/models/': {
      id: '/_authenticated/models/'
      path: '/models'
      fullPath: '/models'
      preLoaderRoute: typeof AuthenticatedModelsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/history/': {
      id: '/_authenticated/history/'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof AuthenticatedHistoryIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dataset/': {
      id: '/_authenticated/dataset/'
      path: '/dataset'
      fullPath: '/dataset'
      preLoaderRoute: typeof AuthenticatedDatasetIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/benchmarks/': {
      id: '/_authenticated/benchmarks/'
      path: '/benchmarks'
      fullPath: '/benchmarks'
      preLoaderRoute: typeof AuthenticatedBenchmarksIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/session-detail/$session_id/': {
      id: '/_authenticated/session-detail/$session_id/'
      path: '/session-detail/$session_id'
      fullPath: '/session-detail/$session_id'
      preLoaderRoute: typeof AuthenticatedSessionDetailSession_idIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedBenchmarksIndexRoute: typeof AuthenticatedBenchmarksIndexRoute
  AuthenticatedDatasetIndexRoute: typeof AuthenticatedDatasetIndexRoute
  AuthenticatedHistoryIndexRoute: typeof AuthenticatedHistoryIndexRoute
  AuthenticatedModelsIndexRoute: typeof AuthenticatedModelsIndexRoute
  AuthenticatedProvidersIndexRoute: typeof AuthenticatedProvidersIndexRoute
  AuthenticatedStartGameIndexRoute: typeof AuthenticatedStartGameIndexRoute
  AuthenticatedSessionDetailSession_idIndexRoute: typeof AuthenticatedSessionDetailSession_idIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedBenchmarksIndexRoute: AuthenticatedBenchmarksIndexRoute,
  AuthenticatedDatasetIndexRoute: AuthenticatedDatasetIndexRoute,
  AuthenticatedHistoryIndexRoute: AuthenticatedHistoryIndexRoute,
  AuthenticatedModelsIndexRoute: AuthenticatedModelsIndexRoute,
  AuthenticatedProvidersIndexRoute: AuthenticatedProvidersIndexRoute,
  AuthenticatedStartGameIndexRoute: AuthenticatedStartGameIndexRoute,
  AuthenticatedSessionDetailSession_idIndexRoute:
    AuthenticatedSessionDetailSession_idIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
